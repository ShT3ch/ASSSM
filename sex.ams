.model tiny
.code
org 100h
start:
jmp main
 
S1 db 'lopaqwe*opa', 0      ; ??????
S0 db 'opa', 0          ; ?????????
len1 db 0               ; ????? ??????
len0 db 0               ; ????? ?????????
found db ?
 
main proc
    push offset S0      ; ???????? ????????? ?????? ??????????
    push offset S1      ; ???????? ?????? ?????? ??????????
    call InStr1         ; ??????????? ??????? ????????? (???? ?? ??????? - 0)
    aam
    push ax
    test ah, ah
    jz @m1
    or ah, 30h
    mov dl, ah
    mov ah, 06
    int 21h
    @m1:
    pop ax
    or al, 30h
    mov dl, al
    mov ah, 06
    int 21h
    mov ah, 00
    int 16h
    ret
main endp
 
InStr1 proc
    str1 equ [bp+4]     ; ?????? ????????
    str2 equ [bp+6]     ; ?????? ????????
    push bp
    mov bp, sp
    push str2
    call Len            ; ?????????? ????? ????????? (????????? ? cx)
    mov len0, cl
    push str1
    call Len            ; ?????????? ????? ?????? (????????? ? cx)
    mov len1, cl
    mov found, 0
    sub cl, len0
    inc cl
    mov si, str1
    mov di, str2
    @InStr1_m1:
        push cx
        push si
        push di
        mov cl, len0
        repe cmpsb
        jne @InStr1_m2
        mov found, 1
        @InStr1_m2:
        pop di
        pop si
        pop cx
        inc si
        cmp found, 1
        je @InStr1_m1_end
    loop @InStr1_m1
    @InStr1_m1_end:
    xor ax, ax
    cmp found, 1
    jne @InStr1_m3
    mov ax, si
    sub ax, str1
    @InStr1_m3:
    pop bp
    ret 4
InStr1 endp
 
Len proc
    str1 equ [bp+4]
    push bp
    mov bp, sp
    mov si, str1
    xor cx, cx
    @Len_m1:
        lodsb
        test al, al
        jz @Len_m1_end
        inc cx
    jmp @Len_m1
    @Len_m1_end:
    pop bp
    ret 2
Len endp
end start

	